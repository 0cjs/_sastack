#!/usr/bin/env bash
set -e -o pipefail
trap 'x=$?; echo 1>&2 "FAILED ($x)."; exit $x' 0

die()  { echo 1>&2 'FAILED:' "$@"; exit 1; }
____() { echo 1>&2 '========= Test:' "$@"; }

basedir=$(cd "$(dirname "$0")" && pwd -P)
testpkg="$basedir/hspackage"
cd "$basedir"

if [[ $1 == --no-clean ]]; then
    ____ WARNING: Not cleaning for full test
else
    ____ 'Cleaning for full test run'
    rm -rf .build/
fi

____ Setting up test homedir
mkdir -p .build/home
export HOME=$(cd .build/home && pwd -P)
echo 1>&2 "HOME=$HOME"

____ 'sastack-setup: stack install (if clean) and -b absolute path'
unset STACK_ROOT
"$basedir/sastack-setup" -b "$basedir/.build/stackroot"
eval $("$basedir/sastack-setup" -b "$basedir/.build/stackroot" 2>/dev/null)
[[ $STACK_ROOT = $basedir/.build/stackroot ]] || die "STACK_ROOT=$STACK_ROOT"

____ 'sastack-setup: stack upgrade and -b relative path'
unset STACK_ROOT
"$basedir/sastack-setup" -b .build/stackroot
eval $("$basedir/sastack-setup" -b .build/stackroot 2>/dev/null)
[[ $STACK_ROOT = $basedir/.build/stackroot ]] || die "STACK_ROOT=$STACK_ROOT"

____ 'Initial build (slow without --no-clean)'
(cd "$testpkg" && stack build)
[[ $($testpkg/.stack-work/install/*/*/*/bin/hspackage-exe) == someFunc ]] \
    || die "hspackage-exe failed or produced bad output"

____ 'Creating preload'
unset STACK_ROOT
preload_file=.build/preload
"$basedir/sastack-setup" -b .build/stackroot -P $preload_file
preload_file=${preload_file}*   # Add extension
echo 1>&2 "New preload_file: $preload_file"
[[ -r $preload_file ]] || die "Cannot read $preload_file"
preload_url="file://$basedir/$preload_file"

____ 'Build with preload'
rm -rf .build/stackroot
eval $("$basedir/sastack-setup" -b .build/stackroot -p "$preload_url")
#   XXX check here for files under .build/stackroot again

exit 99

trap '' 0
